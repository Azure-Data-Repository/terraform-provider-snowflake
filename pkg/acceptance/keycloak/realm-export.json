{
    "id": "209e584e-4863-44ae-8fcd-23d1f014cc6e",
    "realm": "snowflake",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "users": [
        {
            "id": "test-user",
            "username": "test@snowflake.com",
            "enabled": true,
            "email": "test@snowflake.com",
            "credentials": [
              {
                "value": "1234",
                "type": "password",
                "temporary": false
              }
            ],
            "realmRoles": [
                "offline_access",
                "uma_authorization"
            ],
            "clientRoles": {
                "account": [
                    "view-profile",
                    "manage-account"
                ],
                "realm-management": [
                    "query-groups",
                    "query-users",
                    "view-users",
                    "view-clients",
                    "view-realm"
                ]
            }
        }
    ],
    "roles": {
      "realm": [
        {
          "id": "2a90c9b4-1906-4b91-94aa-a7259daf5831",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "209e584e-4863-44ae-8fcd-23d1f014cc6e",
          "attributes": {}
        },
        {
          "id": "c02ba000-2f66-4143-8fea-fdc0f0a776e0",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "209e584e-4863-44ae-8fcd-23d1f014cc6e",
          "attributes": {}
        },
        {
          "id": "f1f1d10c-b14a-4328-aa58-1953847e370a",
          "name": "snowflake-user",
          "description": "",
          "composite": false,
          "clientRole": false,
          "containerId": "209e584e-4863-44ae-8fcd-23d1f014cc6e",
          "attributes": {
            "scp": [
              "session:role:analyst"
            ]
          }
        },
        {
          "id": "b38e0e00-07cb-423e-a90e-b6603bea8645",
          "name": "default-roles-snowflake",
          "description": "${role_default-roles}",
          "composite": true,
          "composites": {
            "realm": [
              "offline_access",
              "uma_authorization"
            ],
            "client": {
              "account": [
                "view-profile",
                "manage-account"
              ]
            }
          },
          "clientRole": false,
          "containerId": "209e584e-4863-44ae-8fcd-23d1f014cc6e",
          "attributes": {}
        }
      ],
      "client": {
        "realm-management": [
          {
            "id": "6e241614-aa33-44a1-8d4f-ff04242ed07d",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "c160b55b-883c-4cd6-9539-224d4c6f213c",
            "attributes": {}
          },
          {
            "id": "3f45d3e1-f19d-4f2f-9d9e-31689820aaba",
            "name": "realm-admin",
            "description": "${role_realm-admin}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "create-client",
                  "manage-events",
                  "query-clients",
                  "query-users",
                  "view-events",
                  "view-identity-providers",
                  "manage-clients",
                  "manage-identity-providers",
                  "manage-users",
                  "view-authorization",
                  "manage-realm",
                  "view-realm",
                  "query-realms",
                  "manage-authorization",
                  "impersonation",
                  "view-users",
                  "query-groups",
                  "view-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "c160b55b-883c-4cd6-9539-224d4c6f213c",
            "attributes": {}
          },
          {
            "id": "4853b895-c05c-47c3-a892-bb3bd8d8a801",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "c160b55b-883c-4cd6-9539-224d4c6f213c",
            "attributes": {}
          },
          {
            "id": "1ff5eaf9-f02e-4ff5-85fc-3429c2042d7b",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "c160b55b-883c-4cd6-9539-224d4c6f213c",
            "attributes": {}
          },
          {
            "id": "4d9aee6f-ae57-4429-8c5a-6a28ac52f3ef",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "c160b55b-883c-4cd6-9539-224d4c6f213c",
            "attributes": {}
          },
          {
            "id": "d638e74c-c624-478a-ae2d-9ddf56244434",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "c160b55b-883c-4cd6-9539-224d4c6f213c",
            "attributes": {}
          },
          {
            "id": "3eb1558d-83b1-49e2-aa99-911ec4d6ad2e",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "c160b55b-883c-4cd6-9539-224d4c6f213c",
            "attributes": {}
          },
          {
            "id": "d84ef813-2007-4e44-8503-83fb09a824c6",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "c160b55b-883c-4cd6-9539-224d4c6f213c",
            "attributes": {}
          },
          {
            "id": "e7f87bd0-2f5a-4722-bed6-79b9cdd5e3bd",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "c160b55b-883c-4cd6-9539-224d4c6f213c",
            "attributes": {}
          },
          {
            "id": "1b46f9ac-76ab-434a-847c-23b59f6c801e",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "c160b55b-883c-4cd6-9539-224d4c6f213c",
            "attributes": {}
          },
          {
            "id": "fc313ca7-089c-4adf-bde4-be27a8dc7fe8",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "c160b55b-883c-4cd6-9539-224d4c6f213c",
            "attributes": {}
          },
          {
            "id": "4ca81663-f524-4591-8e99-e2c9206d3a5b",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "c160b55b-883c-4cd6-9539-224d4c6f213c",
            "attributes": {}
          },
          {
            "id": "71ef24bf-43f2-4f8a-8d2b-3b36d37d9a38",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "c160b55b-883c-4cd6-9539-224d4c6f213c",
            "attributes": {}
          },
          {
            "id": "8eeb3808-f4b5-496f-b513-59eafc7d5c31",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "c160b55b-883c-4cd6-9539-224d4c6f213c",
            "attributes": {}
          },
          {
            "id": "5473b9cf-1770-4abb-aa98-bbf3a17ca0b2",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "c160b55b-883c-4cd6-9539-224d4c6f213c",
            "attributes": {}
          },
          {
            "id": "cdd903e6-c735-45ae-b230-ce9c32fe82bf",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "c160b55b-883c-4cd6-9539-224d4c6f213c",
            "attributes": {}
          },
          {
            "id": "18ef26fe-ea4f-4331-bea5-09e232fd1430",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-users",
                  "query-groups"
                ]
              }
            },
            "clientRole": true,
            "containerId": "c160b55b-883c-4cd6-9539-224d4c6f213c",
            "attributes": {}
          },
          {
            "id": "ab141907-e1fa-47c9-8308-d14262d45e29",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "c160b55b-883c-4cd6-9539-224d4c6f213c",
            "attributes": {}
          },
          {
            "id": "8cc9d5f7-3574-4ab2-b93d-d62712613693",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "c160b55b-883c-4cd6-9539-224d4c6f213c",
            "attributes": {}
          }
        ],
        "security-admin-console": [],
        "https://iya62698.snowflakecomputing.com": [],
        "admin-cli": [],
        "account-console": [],
        "cloudeng3": [
          {
            "id": "07193ce3-9c7b-40fd-be51-45e305cd3a8f",
            "name": "uma_protection",
            "composite": false,
            "clientRole": true,
            "containerId": "ea36cca1-1dcb-4ae6-894e-c67121c0ad20",
            "attributes": {}
          }
        ],
        "broker": [
          {
            "id": "47c5e8c1-a941-4d80-8440-b76976df8e03",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "fad2a08e-a193-4b35-8767-05d6f7abca68",
            "attributes": {}
          }
        ],
        "account": [
          {
            "id": "f80f2351-9374-478a-a54b-20ffb8b9bbe6",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "3a05e6bf-060c-41a3-a782-ca5d26f0c460",
            "attributes": {}
          },
          {
            "id": "7efe2283-3944-404f-961e-824c749da2ba",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "3a05e6bf-060c-41a3-a782-ca5d26f0c460",
            "attributes": {}
          },
          {
            "id": "562b38f9-304a-4eed-a9f4-97794673818b",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "3a05e6bf-060c-41a3-a782-ca5d26f0c460",
            "attributes": {}
          },
          {
            "id": "3127370a-ca34-47dc-9dd9-54828cb527b0",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "view-consent"
                ]
              }
            },
            "clientRole": true,
            "containerId": "3a05e6bf-060c-41a3-a782-ca5d26f0c460",
            "attributes": {}
          },
          {
            "id": "a5f209bb-0178-4d4f-8461-4cedf88560a7",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "manage-account-links"
                ]
              }
            },
            "clientRole": true,
            "containerId": "3a05e6bf-060c-41a3-a782-ca5d26f0c460",
            "attributes": {}
          },
          {
            "id": "f06e797c-f4af-4ff1-8e98-5b884d10ff21",
            "name": "view-groups",
            "description": "${role_view-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "3a05e6bf-060c-41a3-a782-ca5d26f0c460",
            "attributes": {}
          },
          {
            "id": "d532343c-af4b-449a-8a08-4d83914c8426",
            "name": "delete-account",
            "description": "${role_delete-account}",
            "composite": false,
            "clientRole": true,
            "containerId": "3a05e6bf-060c-41a3-a782-ca5d26f0c460",
            "attributes": {}
          },
          {
            "id": "c8aee0bf-8f83-4e76-adcc-a127c4f99f99",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "3a05e6bf-060c-41a3-a782-ca5d26f0c460",
            "attributes": {}
          }
        ]
      }
    },
    "groups": [],
    "defaultRole": {
      "id": "b38e0e00-07cb-423e-a90e-b6603bea8645",
      "name": "default-roles-snowflake",
      "description": "${role_default-roles}",
      "composite": true,
      "clientRole": false,
      "containerId": "209e584e-4863-44ae-8fcd-23d1f014cc6e"
    },
    "requiredCredentials": [
      "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpPolicyCodeReusable": false,
    "otpSupportedApplications": [
      "totpAppFreeOTPName",
      "totpAppGoogleName",
      "totpAppMicrosoftAuthenticatorName"
    ],
    "localizationTexts": {},
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyExtraOrigins": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessExtraOrigins": [],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": [
          "offline_access"
        ]
      }
    ],
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": [
            "manage-account",
            "view-groups"
          ]
        }
      ]
    },
    "clients": [
      {
        "id": "3a05e6bf-060c-41a3-a782-ca5d26f0c460",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/snowflake/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/snowflake/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "744c4eaf-a88d-4df1-a535-954c1d7d1d9a",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/snowflake/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/snowflake/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "fe72cd29-f0e3-4991-81e2-79f362e78529",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "84ac2086-109c-4088-adc5-f53484161360",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "fad2a08e-a193-4b35-8767-05d6f7abca68",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "ea36cca1-1dcb-4ae6-894e-c67121c0ad20",
        "clientId": "cloudeng3",
        "name": "",
        "description": "",
        "rootUrl": "",
        "adminUrl": "",
        "baseUrl": "",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/*"
        ],
        "webOrigins": [
          "/*"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": true,
        "protocol": "openid-connect",
        "attributes": {
          "oidc.ciba.grant.enabled": "false",
          "client.secret.creation.time": "1701326032",
          "backchannel.logout.session.required": "true",
          "post.logout.redirect.uris": "+",
          "oauth2.device.authorization.grant.enabled": "false",
          "display.on.consent.screen": "false",
          "backchannel.logout.revoke.offline.tokens": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "a3d8696e-b71c-4420-a29d-c2c4a1a7145a",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          },
          {
            "id": "a25004ab-17a9-489b-9d0e-9867a6ff4b34",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "client_id",
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "client_id",
              "jsonType.label": "String"
            }
          },
          {
            "id": "021e1891-8fae-42c7-9f13-d6021f943013",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "snowflake"
        ],
        "optionalClientScopes": []
      },
      {
        "id": "3e3b54f0-3bb3-4981-ae1b-f6f324ce64e3",
        "clientId": "https://iya62698.snowflakecomputing.com",
        "name": "",
        "description": "",
        "rootUrl": "",
        "adminUrl": "https://iya62698.snowflakecomputing.com",
        "baseUrl": "https://iya62698.snowflakecomputing.com",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "https://iya62698.snowflakecomputing.com/fed/login",
          "https://sfdevrel-cloud_engineering3.snowflakecomputing.com/fed/login"
        ],
        "webOrigins": [
          "https://sfdevrel-cloud_engineering3.snowflakecomputing.com"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": true,
        "protocol": "saml",
        "attributes": {
          "saml.assertion.signature": "false",
          "saml.force.post.binding": "true",
          "saml_single_logout_service_url_post": "https://iya62698.snowflakecomputing.com/fed/logout",
          "saml.encrypt": "false",
          "post.logout.redirect.uris": "https://sfdevrel-cloud_engineering3.snowflakecomputing.com/fed/logout##https://iya62698.snowflakecomputing.com/fed/logout",
          "saml_assertion_consumer_url_post": "https://iya62698.snowflakecomputing.com/fed/login",
          "saml.server.signature": "true",
          "saml_idp_initiated_sso_url_name": "cloudeng3",
          "saml.server.signature.keyinfo.ext": "false",
          "saml.signing.certificate": "MIICqzCCAZMCBgGMIozyATANBgkqhkiG9w0BAQsFADAZMRcwFQYDVQQDDA5jbG91ZGVuZzMtc2FtbDAeFw0yMzExMzAyMzIzMzFaFw0zMzExMzAyMzI1MTFaMBkxFzAVBgNVBAMMDmNsb3VkZW5nMy1zYW1sMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwmDqSQLBZQF+6W58gTBiY6nlo1kGEcI+lv/o+ljo4uL/i6U8NMQ6lSQZJvBY0XEpXAjH3sTUjMrdRNywTlE2LzIMY4xQpHx2iGAR2NWu0iHg0gDbEh5IDBnIgYkQS6pq6gD3lPviBj/EGxATicy5H0EHqYdfFflId2gaEF0MxdRXXLxV6zZw5pNSw8HqDM6uiirJwbHOz8P/kJO50qfx6+qdk7HV8Lf6WFnMGqRxKfkf8P89Qi5SVU0UAIyDMl1eWBSHAbmLHfRiF30GFUUTJ/NjzCP9djLpqSUzkAntu0Rdazrc4jC8WztayVOXytHSLqG3xDMVTfzVnYCZymTobwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBb2FrkPSu+SlcDh18pVAby1KSIB1iYlUP3vTplfYSOZPkikFRtXE//s0UFKugIToXfADwuYZDcBMAyTC7JTQ5aRyvUZ/HTE5V5oph073uAPsTydpNhLMUecbZYAUCaimAu1MV+IWJQC7A6kKuZZ8Za3TVrAA0TUm/UoMoEa3zXp+TaLL7gEi+kR2Egp7IKK4LGgfLp1WTlinCyJ+cf5TSWGT7+vSmWhDdX8e2Gn1Bf7/I57k0AwRnLJ4JCfWG+Va+pmxpeH4s3Q/MqYtJagvYoWFeT+OTg9V4401J9ElH13IRiXUa8gr/ZO/eP+i+3NreetjfsiJZG6xJeqTW109GL",
          "saml.artifact.binding.identifier": "vKEz/5RLdyVkOMl3q5tl9WXh7RE=",
          "saml.artifact.binding": "false",
          "saml.signature.algorithm": "RSA_SHA256",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "saml.authnstatement": "true",
          "display.on.consent.screen": "false",
          "saml_name_id_format": "email",
          "saml.signing.private.key": "MIIEpAIBAAKCAQEAwmDqSQLBZQF+6W58gTBiY6nlo1kGEcI+lv/o+ljo4uL/i6U8NMQ6lSQZJvBY0XEpXAjH3sTUjMrdRNywTlE2LzIMY4xQpHx2iGAR2NWu0iHg0gDbEh5IDBnIgYkQS6pq6gD3lPviBj/EGxATicy5H0EHqYdfFflId2gaEF0MxdRXXLxV6zZw5pNSw8HqDM6uiirJwbHOz8P/kJO50qfx6+qdk7HV8Lf6WFnMGqRxKfkf8P89Qi5SVU0UAIyDMl1eWBSHAbmLHfRiF30GFUUTJ/NjzCP9djLpqSUzkAntu0Rdazrc4jC8WztayVOXytHSLqG3xDMVTfzVnYCZymTobwIDAQABAoIBACdZXTRIhYQACIQS5Mt2UwSf+SfXNr5Tlz4UMkKzyvlbQKYxXf3El6NnelwCnchQYzIJaQS0zd5ultqA3oQMNq7ZL97bIdwaghhbcmF16H0LdKqul6qUTLt+YLOwXociyZ/zcCtNzlS7heSAnaPwuK0WCgoMqHgXTc82WMhlPdeyKQOYHQuabHYS+bzc4zkmxZcE7qV13LoWhlQOOHf7CO/Lugcn8OZpSkjxQN/ZhT7ueHhzWkY02lS3pk280WFRdxa+9p/X8zKc3GFnGWL6qZqyhqXwmcFRzn5toA5ToBQGV1TfJ1hKxTefOdFG3MNJrJA+anApPcVt6Yp+/pNmR3ECgYEA9OLgVqheSAm3YAIoXVF8QTTVg+IBc9uoz9dTwIZU4HPMh9m52pXs9HrfFSBTLjAFNbxjB6aRz85TtrO+oHf5VjZ+dHuOWO674CbEVk9L8sLVAoOhs7ecU2TRsvsZQWiJOkiLI4iBxY0YLsghSmOICOl31gmKNZZ58bf0H/OsBvkCgYEAyzM7yhY5FQlANsIqp2rWpfOqfZLhiYQHul+cAW/qd1r3v0NqJ7qJP6vlxcGtEfSwwc0cILzz0Fs2DMomEOuKZ1VlHHwL6prQZ+K4+ukSVcyjoao9BXUeFkqTZrng+kkm7+aIDBotmAj2W6zmAVXztarB5tnKUK6VVnfq95BaPKcCgYEAnTmw6VJuPfgnCPg5rDht+3uNfoAziIxGZTMNrbVRd05ByhMLFYFewlTFN84qOaRRJAAQ4M+cHHyPGOVshaChsC2KoQTXDtgwPakGM5fz3igjFNsojbdcIdrAHBbFT05rlMUQuD6jew+ssBSD8zvWEkq7SuuTFfbH0l7V2VHcaBkCgYEAlQ75Pg49Q2Qs2b5nYbZqzQPIviMgFStoK9x06Uz6tyFg+cnvNkOM6MslW4LufWx8uT3H83AIfoBaTtl/QQw31AN9j36jky6L0JktTsnobE4YfsAN0VIPhxSfukyCb7d3u6XliNMvPQbeCXP0qWguxcYERV7gHX1kCTEgiQg4WaMCgYAjfsve0tg9oXBXvoVJp+5iKQ0GdyIrKPTleCuppybrAaBbH6MY7Nvo4rFt2dwmIOI7SBDAmEV3rtYpkJf30YvIWjIWHMEXp46T8c6zPuCKjH80CQXLrwYTgoCjqQN3oKZoZsoKxNn/bhPs92urESBIYyCexeipLrKjIdt/hZPuhg==",
          "saml.allow.ecp.flow": "false",
          "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#",
          "saml.onetimeuse.condition": "false",
          "saml.server.signature.keyinfo.xmlSigKeyInfoKeyNameTransformer": "NONE"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": [
          "role_list"
        ],
        "optionalClientScopes": []
      },
      {
        "id": "c160b55b-883c-4cd6-9539-224d4c6f213c",
        "clientId": "realm-management",
        "name": "${client_realm-management}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "5fe4c0d7-81a8-4da4-996e-20a5e612043a",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/snowflake/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/admin/snowflake/console/*"
        ],
        "webOrigins": [
          "+"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "91149362-3727-4d35-9918-6495e8d6084c",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      }
    ],
    "clientScopes": [
      {
        "id": "795e26d5-d8d2-41a2-aab8-d8fb4723ec06",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${profileScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "8a8d7bd0-edc7-4143-9a90-31d6aac40c51",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "6ccb82c3-d406-4673-9618-f66cefd4d75c",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          },
          {
            "id": "462ca3c9-5436-49ec-8c46-b73652a08c62",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "1ee4bb29-f10e-4b94-b57b-91e547b59e94",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          },
          {
            "id": "83bf1554-6151-48b2-993a-e030520a242f",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "long"
            }
          },
          {
            "id": "9884e5e1-b59a-458a-9d3c-f25cc8b9a4de",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "51d6cf29-21e2-4e10-ac3f-96f9094bb539",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "879216e3-7250-4610-8668-227a6bc0b251",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "b45de6bb-ec8c-4363-a2ae-a48b812a7923",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "180a2a73-4a7e-475b-a4a5-8b23c654796d",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          },
          {
            "id": "5cbbec92-c2c1-47d7-99f5-458a5637cbfc",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "1a640bd3-5952-4a89-82a2-0f75d1afd2f6",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "e39429dd-6c3b-4e5a-8054-a91c5bf8fd8e",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "8de96e3d-70af-47c2-9577-62bf347b7e1a",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "5bb91f6e-3505-434d-9da4-7cbd208e95b8",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${rolesScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "fe8a671c-6a29-431e-ad0b-0710ec64551b",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          },
          {
            "id": "11cbf4f8-54a3-40cd-a569-fea43c1cbeb1",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "multivalued": "true",
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String"
            }
          },
          {
            "id": "9bca2698-d4c8-458b-b439-59240488ce16",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "multivalued": "true",
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "7f49c45d-5467-434f-a383-7eca9a361a3a",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${emailScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "6d7e4c1e-2a29-425b-8ff1-e5965239d538",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          },
          {
            "id": "98ad24b9-d239-4da7-8813-b5b687ea960a",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "286b067d-2ac2-4d41-8533-70173383c1a0",
        "name": "acr",
        "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "0f5de3cc-7929-4f7e-b68d-cf5b89e7922c",
            "name": "acr loa level",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-acr-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "2dc96c41-3cce-473e-9567-caf198b36f28",
        "name": "test_api_access",
        "description": "",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "gui.order": "",
          "consent.screen.text": ""
        }
      },
      {
        "id": "42835d46-91db-491d-bf20-f5440b9422c5",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${phoneScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "45e88a5c-f684-4f89-a040-d88a24724bdd",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "5d0a9439-84b0-49a1-a202-a32aa2cda504",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "6d23bfdc-b4f5-404f-aaa1-f6a55ef5a7e1",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false",
          "consent.screen.text": ""
        },
        "protocolMappers": [
          {
            "id": "92f2e266-9d29-452b-9673-cefd297f894e",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "13519d19-73d1-452b-a683-3bcb217e48db",
        "name": "snowflake",
        "description": "",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "gui.order": "",
          "consent.screen.text": ""
        },
        "protocolMappers": [
          {
            "id": "5fb34266-7bf4-4fcc-b6b7-9afa1e6c2035",
            "name": "scp",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-hardcoded-claim-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "claim.value": "[\"session:role:securityadmin\"]",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "scp",
              "jsonType.label": "JSON",
              "access.tokenResponse.claim": "false"
            }
          },
          {
            "id": "6907fcec-8573-4fa6-a00f-b29f6fcd830a",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "aggregate.attrs": "false",
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "multivalued": "false",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          },
          {
            "id": "258978d2-6b30-4efc-9582-de55507737e9",
            "name": "aud",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "false",
              "access.token.claim": "true",
              "introspection.token.claim": "true",
              "included.custom.audience": "https://sfdevrel-cloud_engineering3.snowflakecomputing.com/",
              "userinfo.token.claim": "false"
            }
          }
        ]
      },
      {
        "id": "9be26386-c144-43d2-91d3-4a5abb230cbc",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "78e81043-2c19-440a-8b16-cee09ceb27f8",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${addressScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "a2b91cd3-4f16-44b5-93b7-61c7ae0ee8bc",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "introspection.token.claim": "true",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      },
      {
        "id": "9cf75223-7011-47f0-bdee-c228de88cfb3",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "d399d1c6-0cac-434c-b046-fa8be823a36b",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "90a26901-8523-484b-b155-afe95fc846b5",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "719e625c-363b-4a78-b724-300ed67b4910",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          },
          {
            "id": "ad700c03-c247-4125-bc7f-6d1f0540a914",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "multivalued": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          }
        ]
      }
    ],
    "defaultDefaultClientScopes": [
      "role_list",
      "profile",
      "email",
      "roles",
      "web-origins",
      "acr",
      "snowflake"
    ],
    "defaultOptionalClientScopes": [
      "offline_access",
      "address",
      "phone",
      "microprofile-jwt"
    ],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "referrerPolicy": "no-referrer",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "xXSSProtection": "1; mode=block",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": [
      "jboss-logging"
    ],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [
      {
        "alias": "github",
        "internalId": "b1da409f-f741-4cad-bac1-d5811da00c66",
        "providerId": "github",
        "enabled": true,
        "updateProfileFirstLoginMode": "on",
        "trustEmail": false,
        "storeToken": false,
        "addReadTokenRoleOnCreate": false,
        "authenticateByDefault": false,
        "linkOnly": false,
        "firstBrokerLoginFlowAlias": "first broker login",
        "config": {
          "hideOnLoginPage": "false",
          "clientId": "Iv1.da34911007435f49",
          "acceptsPromptNoneForwardFromClient": "false",
          "disableUserInfo": "false",
          "filteredByClaim": "false",
          "syncMode": "IMPORT",
          "clientSecret": "**********"
        }
      }
    ],
    "identityProviderMappers": [],
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "ed005cbc-1f7d-4777-86bf-b468a0d1b5e3",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": [
              "200"
            ]
          }
        },
        {
          "id": "d3635274-4921-4988-bbcf-ae034252a9f4",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": [
              "true"
            ],
            "client-uris-must-match": [
              "true"
            ]
          }
        },
        {
          "id": "3df2c1d0-59fc-48c8-8275-83f1562a7f28",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "7b0817a7-42df-4fe9-9167-f2d3bafe6f71",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "117abc9f-82e2-4b5c-ab57-47866e64b015",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "8e6d2dbe-5ac0-44ee-a1fe-2786db4d8459",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "cc75c31a-246f-4688-893a-19984f331a7f",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-usermodel-attribute-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "oidc-address-mapper",
              "saml-user-property-mapper",
              "saml-user-attribute-mapper",
              "saml-role-list-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-full-name-mapper"
            ]
          }
        },
        {
          "id": "3ccfb0a6-ee32-4c35-a2d7-a063f0efc392",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-address-mapper",
              "oidc-usermodel-attribute-mapper",
              "saml-role-list-mapper",
              "saml-user-property-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "oidc-usermodel-property-mapper",
              "saml-user-attribute-mapper",
              "oidc-full-name-mapper"
            ]
          }
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "c72022af-c674-42be-ba2d-1eb670b54b2b",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "8ebffb55-54c3-4307-a605-4a4b238a9d78",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "68afd378-79a6-41c2-8fa5-d31d47831526",
          "name": "hmac-generated",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ],
            "algorithm": [
              "HS256"
            ]
          }
        },
        {
          "id": "7a8aa88b-ad9a-4865-8fbf-35b54f3c0946",
          "name": "rsa-enc-generated",
          "providerId": "rsa-enc-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ],
            "algorithm": [
              "RSA-OAEP"
            ]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
      {
        "id": "0122e03e-8d26-4671-9968-d57bfba0c267",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "42ab5cb0-3d53-4398-8d4a-44c2e6670d47",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "1b205280-5bfb-47e4-9527-6eb969105382",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "b6c99f6f-fd75-400f-b149-ea6a5fec3eb0",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "ef4fdf96-eb8a-4bbb-8caf-19f150895d24",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "50784044-bf57-465d-a35c-17d258a68b65",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "2b5b1d7b-ff71-40bf-b1bf-c72b748c810f",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "4740189f-663c-464a-8c9d-8fd6cd2071e5",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "699f4a9a-4e17-4ea6-8fff-353b7c1205c7",
        "alias": "browser",
        "description": "browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "forms",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "717ad10a-6135-4b76-8cd7-ce13b47392b9",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-secret-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-x509",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "db8ea68b-2509-42b9-8920-7c1714ac404d",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "5df70ec6-4150-4f8d-a497-172c9752b2fc",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "d403f467-4ff8-485a-8a63-99c44dc4092d",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "6a766ba8-deb4-4cfa-90e9-d6d92906ddea",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "1b5cdf54-ee91-4cda-8d92-6872064cb753",
        "alias": "registration",
        "description": "registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": true,
            "flowAlias": "registration form",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "5316c26d-2e0d-4658-88b1-ad58c790fec1",
        "alias": "registration form",
        "description": "registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-password-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 50,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 60,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "2096b6eb-e1ec-4346-a05b-30bbabd3276b",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-credential-email",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 40,
            "autheticatorFlow": true,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "b2f718f2-c1fb-4282-9b05-44cf7a0041fb",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "d79cc07c-b163-437c-a08d-19d1a6c91b22",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "6bc8eb8c-f997-43c9-8980-b0279ea46ebb",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "TERMS_AND_CONDITIONS",
        "name": "Terms and Conditions",
        "providerId": "TERMS_AND_CONDITIONS",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "delete_account",
        "name": "Delete Account",
        "providerId": "delete_account",
        "enabled": false,
        "defaultAction": false,
        "priority": 60,
        "config": {}
      },
      {
        "alias": "webauthn-register",
        "name": "Webauthn Register",
        "providerId": "webauthn-register",
        "enabled": true,
        "defaultAction": false,
        "priority": 70,
        "config": {}
      },
      {
        "alias": "webauthn-register-passwordless",
        "name": "Webauthn Register Passwordless",
        "providerId": "webauthn-register-passwordless",
        "enabled": true,
        "defaultAction": false,
        "priority": 80,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "attributes": {
      "cibaBackchannelTokenDeliveryMode": "poll",
      "cibaExpiresIn": "120",
      "cibaAuthRequestedUserHint": "login_hint",
      "oauth2DeviceCodeLifespan": "600",
      "clientOfflineSessionMaxLifespan": "0",
      "oauth2DevicePollingInterval": "5",
      "clientSessionIdleTimeout": "0",
      "parRequestUriLifespan": "60",
      "clientSessionMaxLifespan": "0",
      "clientOfflineSessionIdleTimeout": "0",
      "cibaInterval": "5",
      "realmReusableOtpCode": "false"
    },
    "keycloakVersion": "23.0.1",
    "userManagedAccessAllowed": false,
    "clientProfiles": {
      "profiles": []
    },
    "clientPolicies": {
      "policies": []
    }
  }
